#gallery ul{list-style:none;margin:0 -.75rem;padding:0;display:flex;flex-direction:row;flex-wrap:wrap;justify-content:flex-start;align-items:stretch;align-content:stretch}#gallery li{margin:1.625em .75rem 0;flex-basis:auto;flex-grow:1;flex-shrink:1;align-self:auto}@media screen and (min-width:41.5rem){#gallery li{flex-basis:18.5rem;margin-left:.75rem;margin-right:.75rem;flex-grow:0;flex-shrink:0;align-self:auto}}@media screen and (min-width:61.5rem){#gallery li{flex-basis:18.5rem;margin-left:.75rem;margin-right:.75rem;flex-grow:0;flex-shrink:0;align-self:auto}}@media screen and (min-width:81.5rem){#gallery li{flex-basis:18.5rem;margin-left:.75rem;margin-right:.75rem;flex-grow:0;flex-shrink:0;align-self:auto}}#gallery a figure{position:relative;margin:0;text-align:left;overflow:hidden}#gallery a figure img{display:block;transition:all 3s}#gallery a figure p{margin:0}#gallery a:hover figure{box-shadow:0 0 30px rgba(0,0,0,.4)}#gallery a:hover figure img{transform:scale(1.05)}.lb-overlay{width:0;height:0;position:fixed;overflow:hidden;left:0;top:0;padding:0;z-index:99;text-align:center;background:rgba(55,58,71,.9)}.lb-overlay a.lb-close{background:rgba(25,28,41,.9);z-index:1001;color:#fff;position:absolute;top:43px;left:50%;font-size:12px;line-height:24px;text-align:center;padding:.125em .5em;height:23px;overflow:hidden;margin-left:-25px;opacity:0;filter:alpha(opacity=0);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(opacity=0)";-webkit-box-shadow:0 1px 2px rgba(0,0,0,.3);-moz-box-shadow:0 1px 2px rgba(0,0,0,.3);box-shadow:0 1px 2px rgba(0,0,0,.3);-webkit-transition:opacity .3s linear 1.2s;-moz-transition:opacity .3s linear 1.2s;-o-transition:opacity .3s linear 1.2s;-ms-transition:opacity .3s linear 1.2s;transition:opacity .3s linear 1.2s}.lb-overlay img{max-height:100%;position:relative;-webkit-box-shadow:1px 1px 4px rgba(0,0,0,.3);-moz-box-shadow:1px 1px 4px rgba(0,0,0,.3);box-shadow:0 2px 7px rgba(0,0,0,.2)}.lb-overlay:target{width:auto;height:auto;bottom:0;right:0;padding:80px 100px 120px}.lb-overlay:target img{-webkit-animation:fadeInScale 1.2s ease-in-out;-moz-animation:fadeInScale 1.2s ease-in-out;-o-animation:fadeInScale 1.2s ease-in-out;-ms-animation:fadeInScale 1.2s ease-in-out;animation:fadeInScale 1.2s ease-in-out}.lb-overlay:target a.lb-close{opacity:1;filter:alpha(opacity=99);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(opacity=99)"}@-webkit-keyframes fadeInScale{0%{-webkit-transform:scale(.6);opacity:0}100%{-webkit-transform:scale(1);opacity:1}}@-moz-keyframes fadeInScale{0%{-moz-transform:scale(.6);opacity:0}100%{-moz-transform:scale(1);opacity:1}}@-o-keyframes fadeInScale{0%{-o-transform:scale(.6);opacity:0}100%{-o-transform:scale(1);opacity:1}}@-ms-keyframes fadeInScale{0%{-ms-transform:scale(.6);opacity:0}100%{-ms-transform:scale(1);opacity:1}}@keyframes fadeInScale{0%{transform:scale(.6);opacity:0}100%{transform:scale(1);opacity:1}}.lb-overlay img,x:-o-prefocus{height:100%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
