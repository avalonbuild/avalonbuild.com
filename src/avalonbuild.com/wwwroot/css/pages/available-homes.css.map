{"version":3,"sources":["pages/available-homes.scss","pages/available-homes.css","../lib/watercolor/modules/_grid.scss"],"names":[],"mappings":"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","file":"available-homes.css","sourcesContent":["@import \"site/settings\";\r\n@import \"watercolor/modules/grid\";\r\n\r\n//\r\n// Available Homes\r\n//\r\n\r\n#available-homes {\r\n\r\n\th2 {\r\n\t\tbackground-image: url(\"/images/available-homes/available homes.svg\");\r\n\t\tbackground-repeat: no-repeat;\r\n\t\tbackground-position: center;\r\n\t\theight: 125px;\r\n\t\ttext-indent: -9999px;\r\n\r\n\t\t@include breakpoint(medium) {\r\n\t\t\theight: 200px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//\r\n// Available Homes\r\n//\r\n\r\n#property-summary {\r\n\r\n\tbackground-color: #f8fafc;\r\n\r\n\th3 {\r\n\t\tline-height: 1.3;\r\n\t\tmargin-bottom: 1em;\r\n\t\t\r\n\t\t#introducing {\r\n\t\t\tfont-size: .6em;\r\n\t\t\topacity: .7;\r\n\t\t}\r\n\r\n\t\t#title {\r\n\t\t\tfont-size: 1.25em;\r\n\t\t\t//font-family: 'Cinzel', Arial;\r\n\t\t\topacity: 1;\r\n\t\t\tmargin-top: -.1em;\r\n\t\t\tmargin-bottom: -.1em;\r\n\t\t\tletter-spacing: -1px;\r\n\t\t}\r\n\r\n\t\t#tagline {\r\n\t\t\tfont-size: .65em;\r\n\t\t\topacity: .7;\r\n\t\t}\r\n\r\n\t\taddress {\r\n\t\t\tdisplay: block;\r\n\t\t\tmargin-top: .5em;\r\n\t\t\tfont-size: .45em;\r\n\t\t\tfont-style: normal;\r\n\t\t\topacity: .5;\r\n\t\t}\r\n\t}\r\n\r\n\tp {\r\n\t\tmax-width: 45em;\r\n\t\tmargin: $line-height * 1em auto;\r\n\t}\r\n\r\n\t#available-time {\r\n\t\tfont-size: 1em;\r\n\t\tfont-weight: bold;\r\n\t\topacity: 1;\r\n\t\tcolor: #fbb03b;\r\n\t\tmargin-top: .5em;\r\n\t}\r\n}\r\n\r\n#sold-badge {\r\n    background: red;\r\n    border: 2px solid white;\r\n    display: inline-block;\r\n    font-size: 1.125em;\r\n    font-weight: bold;\r\n    padding: 0em .3em;\r\n    border-radius: .3em;\r\n    box-shadow: 0 0 .3em 0 rgba(0, 0, 0, 0.2);\r\n    color: white;\r\n    transform: rotate(-10deg);\r\n}\r\n\r\n.confetti {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 800px;\r\n    overflow: hidden;\r\n    z-index: 1000;\r\n    pointer-events: none;\r\n}\r\n.confetti-piece {\r\n    position: absolute;\r\n    width: 10px;\r\n    height: 30px;\r\n    background: #ffd300;\r\n    top: 0;\r\n    opacity: 0;\r\n}\r\n.confetti-piece:nth-child(1) {\r\n    left: 7%;\r\n    transform: rotate(-40deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 182ms;\r\n    animation-duration: 1116ms;\r\n}\r\n.confetti-piece:nth-child(2) {\r\n    left: 14%;\r\n    transform: rotate(4deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 161ms;\r\n    animation-duration: 1076ms;\r\n}\r\n.confetti-piece:nth-child(3) {\r\n    left: 21%;\r\n    transform: rotate(-51deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 481ms;\r\n    animation-duration: 1103ms;\r\n}\r\n.confetti-piece:nth-child(4) {\r\n    left: 28%;\r\n    transform: rotate(61deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 334ms;\r\n    animation-duration: 708ms;\r\n}\r\n.confetti-piece:nth-child(5) {\r\n    left: 35%;\r\n    transform: rotate(-52deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 302ms;\r\n    animation-duration: 776ms;\r\n}\r\n.confetti-piece:nth-child(6) {\r\n    left: 42%;\r\n    transform: rotate(38deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 180ms;\r\n    animation-duration: 1168ms;\r\n}\r\n.confetti-piece:nth-child(7) {\r\n    left: 49%;\r\n    transform: rotate(11deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 395ms;\r\n    animation-duration: 1200ms;\r\n}\r\n.confetti-piece:nth-child(8) {\r\n    left: 56%;\r\n    transform: rotate(49deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 14ms;\r\n    animation-duration: 887ms;\r\n}\r\n.confetti-piece:nth-child(9) {\r\n    left: 63%;\r\n    transform: rotate(-72deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 149ms;\r\n    animation-duration: 805ms;\r\n}\r\n.confetti-piece:nth-child(10) {\r\n    left: 70%;\r\n    transform: rotate(10deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 351ms;\r\n    animation-duration: 1059ms;\r\n}\r\n.confetti-piece:nth-child(11) {\r\n    left: 77%;\r\n    transform: rotate(4deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 307ms;\r\n    animation-duration: 1132ms;\r\n}\r\n.confetti-piece:nth-child(12) {\r\n    left: 84%;\r\n    transform: rotate(42deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 464ms;\r\n    animation-duration: 776ms;\r\n}\r\n.confetti-piece:nth-child(13) {\r\n    left: 91%;\r\n    transform: rotate(-72deg);\r\n    animation: makeItRain 1000ms infinite ease-out;\r\n    animation-delay: 429ms;\r\n    animation-duration: 818ms;\r\n}\r\n.confetti-piece:nth-child(odd) {\r\n    background: #7431e8;\r\n}\r\n.confetti-piece:nth-child(even) {\r\n    z-index: 1;\r\n}\r\n.confetti-piece:nth-child(4n) {\r\n    width: 5px;\r\n    height: 12px;\r\n    animation-duration: 2000ms;\r\n}\r\n.confetti-piece:nth-child(3n) {\r\n    width: 3px;\r\n    height: 10px;\r\n    animation-duration: 2500ms;\r\n    animation-delay: 1000ms;\r\n}\r\n.confetti-piece:nth-child(4n-7) {\r\n  background: red;\r\n}\r\n@keyframes makeItRain {\r\n    from {opacity: 0;}\r\n    50% {opacity: 1;}\r\n    to {transform: translateY(450px);}\r\n}\r\n\r\n#property-render {\r\n\tmargin: 0;\r\n\tpadding: 0 !important;\r\n\r\n\timg {\r\n\t\tdisplay: block;\r\n\t\twidth: 100%;\r\n\t}\r\n}\r\n\r\n#details {\r\n\r\n\tul {\r\n\t\tmargin: $line-height * 2em 0;\r\n\t\tpadding: 0 $line-height * .75em;\r\n\t\ttext-align: left;\r\n\t\tcolumn-count: 1;\r\n\t\tcolumn-gap: 5em;\r\n\r\n\t\t@include breakpoint(large) {\r\n\t\t\tcolumn-count: 2;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//\r\n// Gallery\r\n//\r\n\r\n#gallery {\r\n\r\n\tul {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tlist-style: none;\r\n\t\tmargin: $line-height * 2em 0 ;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\tli {\r\n\t\tbox-sizing: border-box;\r\n\t\tpadding: $line-height * .4em;\r\n\r\n\t\tflex: 1;\r\n\t\tflex-basis: 100%;\r\n\t\t\r\n\t\t@include breakpoint(large) {\r\n            flex-basis: 33.3%;\r\n        }\r\n\r\n\t\t// &:first-child .prev {\r\n\t\t// \tdisplay: none;\r\n\t\t// }\r\n\r\n\t\t// &:last-child .next {\r\n\t\t// \tdisplay: none;\r\n\t\t// }\r\n\t}\r\n\r\n\ta {\r\n\r\n\t\tfigure {\r\n\t\t\tposition: relative;\r\n\t\t\tmargin: 0;\r\n\t\t\ttext-align: left;\r\n\t\t\toverflow: hidden;\r\n\r\n\t\t\timg {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\ttransition: all 3s;\r\n\t\t\t}\r\n\r\n\t\t\tp {\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&:hover {\r\n\r\n\t\t\tfigure {\r\n\t\t\t\tbox-shadow: 0 0 30px rgba(0,0,0,0.4);\r\n\r\n\t\t\t\timg {\r\n\t\t\t\t\ttransform: scale(1.05);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//\r\n// Lightbox from: https://tympanus.net/codrops/2011/12/26/css3-lightbox/\r\n//\r\n\r\n.lb-overlay{\r\n\tdisplay: none;\r\n\twidth: 0;\r\n\theight: 0;\r\n\tposition: fixed;\r\n\toverflow: hidden;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpadding: 0;\r\n\tz-index: 99;\r\n\ttext-align: center;\r\n\tbackground: rgba(55, 58, 71, 0.9);\r\n\r\n\ta {\r\n\t\tbackground: rgba(25, 28, 41, 0.6);\r\n\t\tcolor: #eee;\r\n\t\tfilter: alpha(opacity=0); /* internet explorer */\r\n\t\t-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(opacity=0)\"; /*IE8*/\r\n\t\tbox-shadow: 0px 1px 2px rgba(0,0,0,0.3);\r\n\t\tborder-radius: 50%;\r\n\t\t/*opacity: 0;\r\n\t\ttransition: opacity 0.3s linear 1.2s;*/\r\n\t\ttransform: translateX(-50%);\r\n\t\tcursor: pointer;\r\n\t\tz-index: 1001;\r\n\r\n\t\t&:hover {\r\n\t\t\tbackground: rgba(25, 28, 41, 1);\r\n\t\t\tcolor: #fff;\r\n\t\t}\r\n\t}\r\n\r\n\ta.lb-close {\r\n\t\tposition: absolute;\r\n\t\ttop: 8px;\r\n\t\tleft: 50%;\r\n\t\theight: 24px;\r\n\t\twidth: 24px;\r\n\t\tfont-size: 16px;\r\n\t\tline-height: 24px;\r\n\t\ttext-align: center;\r\n\t\tpadding: .4em;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\r\n\r\n\timg{\r\n\t\t/* height: 100%; For Opera max-height does not seem to work */\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tbox-shadow: 0px 2px 7px rgba(0,0,0,0.2);\r\n\r\n\t\tmax-height: 100%;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\r\n\t.prev {\r\n\t\tposition: absolute;\r\n\t\ttop: 45%;\r\n\t\tleft: 54px;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 24px;\r\n\t\ttext-align: center;\r\n\t\tpadding: .5em 1em;\r\n\t\theight: 23px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.next {\r\n\t\tposition: absolute;\r\n\t\ttop: 45%;\r\n\t\tright: 54px;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 24px;\r\n\t\ttext-align: center;\r\n\t\tpadding: .5em 1em;\r\n\t\theight: 23px;\r\n\t\toverflow: hidden;\r\n\t\ttransform: translateX(50%);\r\n\t\ttransition: .25s all ease;\r\n\t}\r\n\r\n\t@media (orientation: portrait) {\r\n\t\t.prev {\r\n\t\t\tleft: 24px;\r\n\t\t}\r\n\t\t.next {\r\n\t\t\tright: 24px;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n.lb-overlay:target {\r\n\twidth: auto;\r\n\theight: auto;\r\n\tbottom: 0;\r\n\tright: 0;\r\n\tpadding: 50px 7% 50px 7%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\timg {\r\n\t\tanimation: fadeInScale 1.2s ease-in-out;\r\n\t}\r\n\r\n\ta.lb-close,\r\n\ta.prev,\r\n\ta.next {\r\n\t\topacity: 1;\r\n\t\tfilter: alpha(opacity=99); /* internet explorer */\r\n\t\t-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(opacity=99)\"; /*IE8*/\r\n\t}\r\n}\r\n\r\n@keyframes fadeInScale {\r\n  0% { transform: scale(0.6); opacity: 0; }\r\n  100% { transform: scale(1); opacity: 1; }\r\n}\r\n\r\n/*\r\n\t100% Height for Opera as the max-height seems to be ignored, not optimal for large screens\r\n\thttp://bricss.net/post/11230266445/css-hack-to-target-opera\r\n*/\r\nx:-o-prefocus, .lb-overlay img {\r\n    height: 100%;\r\n}","#available-homes h2 {\n  background-image: url(\"/images/available-homes/available homes.svg\");\n  background-repeat: no-repeat;\n  background-position: center;\n  height: 125px;\n  text-indent: -9999px;\n}\n\n@media screen and (min-width: 41.5rem) {\n  #available-homes h2 {\n    height: 200px;\n  }\n}\n\n#property-summary {\n  background-color: #f8fafc;\n}\n\n#property-summary h3 {\n  line-height: 1.3;\n  margin-bottom: 1em;\n}\n\n#property-summary h3 #introducing {\n  font-size: .6em;\n  opacity: .7;\n}\n\n#property-summary h3 #title {\n  font-size: 1.25em;\n  opacity: 1;\n  margin-top: -.1em;\n  margin-bottom: -.1em;\n  letter-spacing: -1px;\n}\n\n#property-summary h3 #tagline {\n  font-size: .65em;\n  opacity: .7;\n}\n\n#property-summary h3 address {\n  display: block;\n  margin-top: .5em;\n  font-size: .45em;\n  font-style: normal;\n  opacity: .5;\n}\n\n#property-summary p {\n  max-width: 45em;\n  margin: 1.625em auto;\n}\n\n#property-summary #available-time {\n  font-size: 1em;\n  font-weight: bold;\n  opacity: 1;\n  color: #fbb03b;\n  margin-top: .5em;\n}\n\n#sold-badge {\n  background: red;\n  border: 2px solid white;\n  display: inline-block;\n  font-size: 1.125em;\n  font-weight: bold;\n  padding: 0em .3em;\n  border-radius: .3em;\n  box-shadow: 0 0 0.3em 0 rgba(0, 0, 0, 0.2);\n  color: white;\n  transform: rotate(-10deg);\n}\n\n.confetti {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  width: 100%;\n  height: 800px;\n  overflow: hidden;\n  z-index: 1000;\n  pointer-events: none;\n}\n\n.confetti-piece {\n  position: absolute;\n  width: 10px;\n  height: 30px;\n  background: #ffd300;\n  top: 0;\n  opacity: 0;\n}\n\n.confetti-piece:nth-child(1) {\n  left: 7%;\n  transform: rotate(-40deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 182ms;\n  animation-duration: 1116ms;\n}\n\n.confetti-piece:nth-child(2) {\n  left: 14%;\n  transform: rotate(4deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 161ms;\n  animation-duration: 1076ms;\n}\n\n.confetti-piece:nth-child(3) {\n  left: 21%;\n  transform: rotate(-51deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 481ms;\n  animation-duration: 1103ms;\n}\n\n.confetti-piece:nth-child(4) {\n  left: 28%;\n  transform: rotate(61deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 334ms;\n  animation-duration: 708ms;\n}\n\n.confetti-piece:nth-child(5) {\n  left: 35%;\n  transform: rotate(-52deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 302ms;\n  animation-duration: 776ms;\n}\n\n.confetti-piece:nth-child(6) {\n  left: 42%;\n  transform: rotate(38deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 180ms;\n  animation-duration: 1168ms;\n}\n\n.confetti-piece:nth-child(7) {\n  left: 49%;\n  transform: rotate(11deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 395ms;\n  animation-duration: 1200ms;\n}\n\n.confetti-piece:nth-child(8) {\n  left: 56%;\n  transform: rotate(49deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 14ms;\n  animation-duration: 887ms;\n}\n\n.confetti-piece:nth-child(9) {\n  left: 63%;\n  transform: rotate(-72deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 149ms;\n  animation-duration: 805ms;\n}\n\n.confetti-piece:nth-child(10) {\n  left: 70%;\n  transform: rotate(10deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 351ms;\n  animation-duration: 1059ms;\n}\n\n.confetti-piece:nth-child(11) {\n  left: 77%;\n  transform: rotate(4deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 307ms;\n  animation-duration: 1132ms;\n}\n\n.confetti-piece:nth-child(12) {\n  left: 84%;\n  transform: rotate(42deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 464ms;\n  animation-duration: 776ms;\n}\n\n.confetti-piece:nth-child(13) {\n  left: 91%;\n  transform: rotate(-72deg);\n  animation: makeItRain 1000ms infinite ease-out;\n  animation-delay: 429ms;\n  animation-duration: 818ms;\n}\n\n.confetti-piece:nth-child(odd) {\n  background: #7431e8;\n}\n\n.confetti-piece:nth-child(even) {\n  z-index: 1;\n}\n\n.confetti-piece:nth-child(4n) {\n  width: 5px;\n  height: 12px;\n  animation-duration: 2000ms;\n}\n\n.confetti-piece:nth-child(3n) {\n  width: 3px;\n  height: 10px;\n  animation-duration: 2500ms;\n  animation-delay: 1000ms;\n}\n\n.confetti-piece:nth-child(4n-7) {\n  background: red;\n}\n\n@keyframes makeItRain {\n  from {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  to {\n    transform: translateY(450px);\n  }\n}\n\n#property-render {\n  margin: 0;\n  padding: 0 !important;\n}\n\n#property-render img {\n  display: block;\n  width: 100%;\n}\n\n#details ul {\n  margin: 3.25em 0;\n  padding: 0 1.21875em;\n  text-align: left;\n  column-count: 1;\n  column-gap: 5em;\n}\n\n@media screen and (min-width: 61.5rem) {\n  #details ul {\n    column-count: 2;\n  }\n}\n\n#gallery ul {\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: 3.25em 0;\n  padding: 0;\n}\n\n#gallery li {\n  box-sizing: border-box;\n  padding: 0.65em;\n  flex: 1;\n  flex-basis: 100%;\n}\n\n@media screen and (min-width: 61.5rem) {\n  #gallery li {\n    flex-basis: 33.3%;\n  }\n}\n\n#gallery a figure {\n  position: relative;\n  margin: 0;\n  text-align: left;\n  overflow: hidden;\n}\n\n#gallery a figure img {\n  display: block;\n  transition: all 3s;\n}\n\n#gallery a figure p {\n  margin: 0;\n}\n\n#gallery a:hover figure {\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.4);\n}\n\n#gallery a:hover figure img {\n  transform: scale(1.05);\n}\n\n.lb-overlay {\n  display: none;\n  width: 0;\n  height: 0;\n  position: fixed;\n  overflow: hidden;\n  left: 0;\n  top: 0;\n  padding: 0;\n  z-index: 99;\n  text-align: center;\n  background: rgba(55, 58, 71, 0.9);\n}\n\n.lb-overlay a {\n  background: rgba(25, 28, 41, 0.6);\n  color: #eee;\n  filter: alpha(opacity=0);\n  /* internet explorer */\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(opacity=0)\";\n  /*IE8*/\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.3);\n  border-radius: 50%;\n  /*opacity: 0;\r\n\t\ttransition: opacity 0.3s linear 1.2s;*/\n  transform: translateX(-50%);\n  cursor: pointer;\n  z-index: 1001;\n}\n\n.lb-overlay a:hover {\n  background: #191c29;\n  color: #fff;\n}\n\n.lb-overlay a.lb-close {\n  position: absolute;\n  top: 8px;\n  left: 50%;\n  height: 24px;\n  width: 24px;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  padding: .4em;\n  overflow: hidden;\n}\n\n.lb-overlay img {\n  /* height: 100%; For Opera max-height does not seem to work */\n  display: block;\n  position: relative;\n  box-shadow: 0px 2px 7px rgba(0, 0, 0, 0.2);\n  max-height: 100%;\n  max-width: 100%;\n}\n\n.lb-overlay .prev {\n  position: absolute;\n  top: 45%;\n  left: 54px;\n  font-size: 12px;\n  line-height: 24px;\n  text-align: center;\n  padding: .5em 1em;\n  height: 23px;\n  overflow: hidden;\n}\n\n.lb-overlay .next {\n  position: absolute;\n  top: 45%;\n  right: 54px;\n  font-size: 12px;\n  line-height: 24px;\n  text-align: center;\n  padding: .5em 1em;\n  height: 23px;\n  overflow: hidden;\n  transform: translateX(50%);\n  transition: .25s all ease;\n}\n\n@media (orientation: portrait) {\n  .lb-overlay .prev {\n    left: 24px;\n  }\n  .lb-overlay .next {\n    right: 24px;\n  }\n}\n\n.lb-overlay:target {\n  width: auto;\n  height: auto;\n  bottom: 0;\n  right: 0;\n  padding: 50px 7% 50px 7%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.lb-overlay:target img {\n  animation: fadeInScale 1.2s ease-in-out;\n}\n\n.lb-overlay:target a.lb-close,\n.lb-overlay:target a.prev,\n.lb-overlay:target a.next {\n  opacity: 1;\n  filter: alpha(opacity=99);\n  /* internet explorer */\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(opacity=99)\";\n  /*IE8*/\n}\n\n@keyframes fadeInScale {\n  0% {\n    transform: scale(0.6);\n    opacity: 0;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n/*\r\n\t100% Height for Opera as the max-height seems to be ignored, not optimal for large screens\r\n\thttp://bricss.net/post/11230266445/css-hack-to-target-opera\r\n*/\nx:-o-prefocus, .lb-overlay img {\n  height: 100%;\n}\n","﻿////\r\n///\r\n/// Grid related mixins to help style the grid container, columns, and text\r\n///\r\n/// @group grid\r\n/// @author Clint Kolodziej\r\n///\r\n////\r\n\r\n@import \"../defaults/grid\";\r\n\r\n///\r\n/// Build the container based on the breakpoint settings (default breakpoints are: default, small, medium, large, extra-large)\r\n///\r\n/// @example scss - Usage\r\n///\t\t.container {\r\n///\t\t\t@include container;\r\n///\t\t}\r\n///\r\n\r\n@mixin container() {\r\n\tbox-sizing: border-box;\r\n\tmargin: 0 auto;\r\n\tpadding-right: $gutter-width * 0.5;\r\n\tpadding-left: $gutter-width * 0.5;\r\n\t\r\n\t@each $size, $cols in $breakpoints {\r\n\t\t\t\t\r\n\t\t@if $size == default {\r\n\t\t\twidth: $cols * ($column-width + $gutter-width);\r\n\t\t}\r\n\t\t@else {\r\n\t\t\t@include breakpoint($size) {\r\n\t\t\t\twidth: $cols * ($column-width + $gutter-width);\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n}\r\n\r\n///\r\n/// Insert the given content within a media query given the breakpoint size\r\n///\r\n/// @parameter {number} $point - The breakpoint that the content should be applied to. Values: `default`, `small`, `medium`, `large`, `extra-large` (if using grid defaults)\r\n///\r\n/// @example scss - Usage\r\n///\t\tdiv {\r\n///\t\t\t@include breakpoint(large) {\r\n///\t\t\t\tcolor: red;\r\n///\t\t\t}\r\n///\t\t}\r\n///\r\n\r\n@mixin breakpoint($point) {\r\n\t$break: ($column-width + $gutter-width) * map-get($breakpoints, $point) + $gutter-width;\r\n\t\r\n\t@media screen and (min-width: $break) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n///\r\n/// Set the element as a grid container with given type, direction, margin-adjustment, wrapping, justification, and alignment\r\n///\r\n/// @parameter {string} $type [row] - Type of grid. Values: `row`, `column`\r\n/// @parameter {string} $direction [forward] - Direction that the grid items should follow. Values: `forward`, `reverse`\r\n/// @parameter {string} $wrap [wrap] - Should the content be wrapped or not. Values: `wrap`, `no-wrap`, `reverse`\r\n/// @parameter {string} $justify [start] - How to justify the columns within the available space. Values: `start`, `end`, `center`, `between`, `around`\r\n/// @parameter {string} $align-items [stretch] - Alignment method for child columns on the cross axis (basically vertical align for child columns). Values: `stretch`, `start`, `end`, `center`, `baseline`\r\n/// @parameter {string} $align-content [stretch] - Alignment method for the grid content on the cross axis (basically vertical align for the entire content of the grid). Values: `stretch`, `start`, `end`, `center`, `between`, `around`\r\n/// @parameter {boolean} $margin-adjust [true] - Whether the grid should adjust the outer margin to allow it to align with non-grid content. Values: `true`, `false`\r\n///\r\n/// @example scss - Usage\r\n///\t\tsection {\r\n///\t\t\t@include grid;\r\n///\t\t}\r\n///\r\n\r\n@mixin grid($type: row, $direction: forward, $wrap: wrap, $justify: start, $align-items: stretch, $align-content: stretch, $margin-adjust: true) {\r\n\t@include grid-type($type, $direction);\r\n\t@include grid-wrap($wrap);\r\n\t@include grid-justify($justify);\t\r\n\t@include grid-align-items($align-items);\r\n\t@include grid-align-content($align-content);\r\n\t@include grid-margin-adjust($type, $margin-adjust);\r\n}\r\n\r\n///\r\n/// Set the element as a specific grid type and direction\r\n///\r\n/// @parameter {string} $type [row] - Type of grid. Values: `row`, `column`\r\n/// @parameter {string} $direction [forward] - Direction that the grid items should follow. Values: `forward`, `reverse`\r\n///\r\n/// @example scss - Usage\r\n///\t\tsection {\r\n///\t\t\t@include grid-type($type: row, $direction: reverse);\r\n///\t\t}\r\n///\r\n\r\n@mixin grid-type($type: row, $direction: forward) {\r\n\t\r\n\tdisplay: flex;\r\n\t\r\n\t@if $type == row {\r\n\t\r\n\t\t@if $direction == forward {\r\n\t\t\tflex-direction: row;\r\n\t\t}\t\r\n\t\t@else if $direction == reverse {\r\n\t\t\tflex-direction: row-reverse;\r\n\t\t}\t\r\n\t}\r\n\t@else if $type == column {\r\n\t\t\r\n\t\t@if $direction == forward {\r\n\t\t\tflex-direction: column;\r\n\t\t}\r\n\t\t@else if $direction == reverse {\r\n\t\t\tflex-direction: column-reverse;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///\r\n/// Set how the grid will deal with content that is longer than one line\r\n///\r\n/// @parameter {string} $wrap [wrap] - Should the content be wrapped or not. Values: `wrap`, `no-wrap`, `reverse`\r\n///\r\n/// @example scss - Usage\r\n///\t\tsection {\r\n///\t\t\t@include grid-wrap(no-wrap);\r\n///\t\t}\r\n///\r\n\r\n@mixin grid-wrap($wrap: wrap) {\r\n\t\r\n\t@if $wrap == no-wrap {\r\n\t\tflex-wrap: nowrap;\r\n\t}\r\n\t@if $wrap == wrap {\r\n\t\tflex-wrap: wrap;\r\n\t}\r\n\t@else if $wrap == reverse {\r\n\t\tflex-wrap: wrap-reverse;\r\n\t}\r\n}\r\n\r\n///\r\n/// Set how the grid will justify content when there is unused space on a line\r\n///\r\n/// @parameter {string} $justify [start] - How to justify the columns within the available space. Values: `start`, `end`, `center`, `between`, `around`\r\n///\r\n/// @example scss - Usage\r\n///\t\tsection {\r\n///\t\t\t@include grid-justify(center);\r\n///\t\t}\r\n///\r\n\r\n@mixin grid-justify($justify: start) {\r\n\t\r\n\t@if $justify == start {\r\n\t\tjustify-content: flex-start;\r\n\t}\t\r\n\t@if $justify == end {\r\n\t\tjustify-content: flex-end;\r\n\t}\r\n\t@else if $justify == center {\r\n\t\tjustify-content: center;\r\n\t}\r\n\t@else if $justify == between {\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\t@else if $justify == around {\r\n\t\tjustify-content: space-around;\r\n\t}\r\n}\r\n\r\n///\r\n/// Set how the grid will vertically align child elements by default and how the entire grid content vertically aligns when there is extra space\r\n///\r\n/// @parameter {string} $align-items [stretch] - Alignment method for child columns on the cross axis (basically vertical align for child columns). Values: `stretch`, `start`, `end`, `center`, `baseline`\r\n/// @parameter {string} $align-content [stretch] - Alignment method for the grid content on the cross axis (basically vertical align for the entire content of the grid). Values: `stretch`, `start`, `end`, `center`, `between`, `around`\r\n///\r\n/// @example scss - Usage\r\n///\t\tsection {\r\n///\t\t\t@include grid-align(center, center);\r\n///\t\t}\r\n///\r\n\r\n@mixin grid-align($align-items: stretch, $align-content: stretch) {\t\r\n\t@include grid-align-items($align-items);\r\n\t@include grid-align-content($align-content);\r\n}\r\n\t\r\n///\r\n/// Set how the grid will vertically align child elements by default\r\n///\r\n/// @parameter {string} $align [stretch] - Alignment method for child columns on the cross axis (basically vertical align for child columns). Values: `stretch`, `start`, `end`, `center`, `baseline`\r\n///\r\n/// @example scss - Usage\r\n///\t\tsection {\r\n///\t\t\t@include grid-align-items(end);\r\n///\t\t}\r\n///\r\n\r\n@mixin grid-align-items($align: stretch) {\r\n\t\r\n\t@if $align == stretch {\r\n\t\talign-items: stretch;\r\n\t}\t\r\n\t@else if $align == start {\r\n\t\talign-items: flex-start;\r\n\t}\r\n\t@else if $align == end {\r\n\t\talign-items: flex-end;\r\n\t}\r\n\t@else if $align == center {\r\n\t\talign-items: center;\r\n\t}\r\n\t@else if $align == baseline {\r\n\t\talign-items: baseline;\r\n\t}\r\n}\r\n\r\n///\r\n/// Set how the entire grid content vertically aligns when there is extra space\r\n///\r\n/// @parameter {string} $align [stretch] - Alignment method for the grid content on the cross axis (basically vertical align for the entire content of the grid). Values: `stretch`, `start`, `end`, `center`, `between`, `around`\r\n///\r\n/// @example scss - Usage\r\n///\t\tsection {\r\n///\t\t\t@include grid-align-content(center);\r\n///\t\t}\r\n///\r\n\r\n@mixin grid-align-content($align: stretch) {\r\n\t\r\n\t@if $align == stretch {\r\n\t\talign-content: stretch;\r\n\t}\t\r\n\t@else if $align == start {\r\n\t\talign-content: flex-start;\r\n\t}\r\n\t@else if $align == end {\r\n\t\talign-content: flex-end;\r\n\t}\r\n\t@else if $align == center {\r\n\t\talign-content: center;\r\n\t}\r\n\t@else if $align == between {\r\n\t\talign-content: space-between;\r\n\t}\r\n\t@else if $align == around {\r\n\t\talign-content: space-around;\r\n\t}\r\n}\r\n\r\n///\r\n/// Set how the grid adjusts the margin to allow it to align with non-grid content\r\n///\r\n/// @parameter {boolean} $margin-adjust [true] - Whether the grid should adjust the outer margin to allow it to align with non-grid content. Values: `true`, `false`\r\n///\r\n/// @example scss - Usage\r\n///\t\tsection {\r\n///\t\t\t@include grid-margin-adjust($type: row, $margin-adjust: false);\r\n///\t\t}\r\n///\r\n\r\n@mixin grid-margin-adjust($type: row, $margin-adjust: true) {\r\n\t\r\n\t@if $margin-adjust == true {\r\n\t\t\r\n\t\t@if $type == row {\r\n\t\t\tmargin-right: $gutter-width * -0.5;\r\n\t\t\tmargin-left: $gutter-width * -0.5;\r\n\t\t}\r\n\t\t///TODO: NOT SURE IF THIS SHOULD BE A THING OR NOT, PERHAPS THIS OPTION ISNT RELEVANT TO COLUMN GRIDS SINCE THERE IS NO TOP/BOTTOM MARGIN ON THE CONTAINER\r\n\t\t//@else if $type == column {\r\n\t\t//\tmargin-top: $gutter-width * -0.5;\r\n\t\t//\tmargin-bottom: $gutter-width * -0.5;\r\n\t\t//}\r\n\t}\r\n}\r\n\r\n///\r\n/// Set the number of columns an element spans on the grid and other behaviors such as prefix, suffix, grow, shrink, align, and order\r\n///\r\n/// @parameter {number|string} $cols [auto] - The number of columns the element should span. Values: `auto`, `max`, `#`\r\n/// @parameter {number} $prefix [0] - The number of columns that should prefix the element\r\n/// @parameter {number} $suffix [0] - The number of columns that should suffix the element\r\n/// @parameter {boolean|number} $grow [false] - Whether the column should grow or not or by what factor. Values: `true`, `false`, `#`\r\n/// @parameter {boolean|number} $shrink [false] - Whether the column should shrink or not or by what factor. Values: `true`, `false`, `#`\r\n/// @parameter {string} $align [auto] - Alignment method for the column on the cross axis (basically vertical align). Values: `auto`, `start`, `end`, `center`, `baseline`, `stretch`\r\n/// @parameter {boolean} $order [0] - Order to apply to the column order.\r\n///\r\n/// @example scss - Usage\r\n///\t\tdiv {\r\n///\t\t\t@include column;\r\n///\t\t}\r\n///\r\n\r\n@mixin column($cols: auto, $prefix: 0, $suffix: 0, $grow: false, $shrink: false, $align: auto, $order: 0) {\r\n\t\r\n\t//\r\n\t// force grow and shrink to true if a scaling number isnt provided ($cols: max/auto does not allow grow/shrink == 0/false)\r\n\t//\r\n\t\t\r\n\t@if $cols == max or $cols == auto {\r\n\t\t\r\n\t\t@if type-of($grow) != number or $grow == 0 {\r\n\t\t\t$grow: true;\r\n\t\t}\r\n\t\t\r\n\t\t@if type-of($shrink) != number or $shrink == 0 {\r\n\t\t\t$shrink: true;\r\n\t\t}\r\n\t}\r\n\t\r\n\t@include column-cols($cols);\r\n\t@include column-prefix($prefix);\r\n\t@include column-suffix($suffix);\r\n\t@include column-grow($grow);\r\n\t@include column-shrink($shrink);\r\n\t@include column-align($align);\r\n\t@include column-order($order);\r\n}\r\n\r\n///\r\n/// Set the number of columns an element spans on the grid\r\n///\r\n/// @parameter {number|string} $cols [auto] - The number of columns the element should span. Values: `auto`, `max`, `#`\r\n///\r\n/// @example scss - Usage\r\n///\t\tdiv {\r\n///\t\t\t@include column-cols(2);\r\n///\t\t}\r\n///\r\n\r\n@mixin column-cols($cols: auto) {\r\n\t\r\n\t@if $cols == max {\r\n\t\tflex-basis: 100%;\r\n\t}\r\n\t@else if $cols == auto {\r\n\t\tflex-basis: auto;\r\n\t}\r\n\t@else {\r\n\t\tflex-basis: $cols * ($column-width + $gutter-width) - $gutter-width;\r\n\t}\r\n}\r\n\r\n///\r\n/// Set the number of empty columns that should prefix the element on the grid\r\n///\r\n/// @parameter {number} $prefix [0] - The number of columns that should prefix the element\r\n///\r\n/// @example scss - Usage\r\n///\t\tdiv {\r\n///\t\t\t@include column-prefix(2);\r\n///\t\t}\r\n///\r\n\r\n@mixin column-prefix($cols: 0) {\r\n\tmargin-left: ($cols * ($column-width + $gutter-width)) + ($gutter-width / 2);\r\n}\r\n\r\n///\r\n/// Set the number of empty columns that should follow the element on the grid\r\n///\r\n/// @parameter {number} $suffix [0] - The number of columns that should suffix the element\r\n///\r\n/// @example scss - Usage\r\n///\t\tdiv {\r\n///\t\t\t@include column-suffix(2);\r\n///\t\t}\r\n///\r\n\r\n@mixin column-suffix($cols: 0) {\r\n\tmargin-right: ($cols * ($column-width + $gutter-width)) + ($gutter-width / 2);\r\n}\r\n\r\n///\r\n/// Set the column to automatically grow when there is available space\r\n///\r\n/// @parameter {boolean|number} $grow [true] - Whether the column should grow or not or by what factor. Values: `true`, `false`, `#`\r\n///\r\n/// @example scss - Usage\r\n///\t\tdiv {\r\n///\t\t\t@include column-grow(false);\r\n///\t\t}\r\n///\r\n\r\n@mixin column-grow($grow: true) {\r\n\t\r\n\t@if $grow == true {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t@else if $grow == false {\r\n\t\tflex-grow: 0;\r\n\t}\r\n\t@else {\r\n\t\tflex-grow: $grow;\r\n\t}\r\n}\r\n\r\n///\r\n/// Set the column to automatically shrink when there is not enough available space\r\n///\r\n/// @parameter {boolean|number} $shrink [true] - Whether the column should shrink or not or by what factor. Values: `true`, `false`, `#`\r\n///\r\n/// @example scss - Usage\r\n///\t\tdiv {\r\n///\t\t\t@include column-shrink(false);\r\n///\t\t}\r\n///\r\n\r\n@mixin column-shrink($shrink: true) {\r\n\t\r\n\t@if $shrink == true {\r\n\t\tflex-shrink: 1;\r\n\t}\r\n\t@else if $shrink == false {\r\n\t\tflex-shrink: 0;\r\n\t}\r\n\t@else {\r\n\t\tflex-shrink: $shrink;\r\n\t}\r\n}\r\n\r\n///\r\n/// Set the alignment on the column, this will override the default alignment on the grid container\r\n///\r\n/// @parameter {string} $align [auto] - Alignment method for the column on the cross axis (basically vertical align). Values: `auto`, `start`, `end`, `center`, `baseline`, `stretch`\r\n///\r\n/// @example scss - Usage\r\n///\t\tdiv {\r\n///\t\t\t@include column-align(center);\r\n///\t\t}\r\n///\r\n\r\n@mixin column-align($align: auto) {\r\n\t\r\n\t@if $align == auto {\r\n\t\talign-self: auto;\r\n\t}\r\n\t@else if $align == start {\r\n\t\talign-self: flex-start;\r\n\t}\r\n\t@else if $align == end {\r\n\t\talign-self: flex-end;\r\n\t}\r\n\t@else if $align == center {\r\n\t\talign-self: center;\r\n\t}\r\n\t@else if $align == baseline {\r\n\t\talign-self: baseline;\r\n\t}\r\n\t@else if $align == stretch {\r\n\t\talign-self: stretch;\r\n\t}\r\n}\r\n\r\n///\r\n/// Set the order of the column to override the normal ordering\r\n///\r\n/// @parameter {boolean} $order [0] - Order to apply to the column order.\r\n///\r\n/// @example scss - Usage\r\n///\t\tdiv {\r\n///\t\t\t@include column-order(-1);\r\n///\t\t}\r\n///\r\n\r\n@mixin column-order($order: 0) {\r\n\t\r\n\t//\r\n\t// css default is 0\r\n\t//\r\n\t\r\n\t@if $order != 0 {\r\n\t\torder: $order;\r\n\t}\r\n}\r\n\r\n///\r\n/// Define the font styles that position the font within the typographic grid\r\n///\r\n/// @parameter {number} $size - Numeric font size in unitless format\r\n///\r\n/// @example scss - Usage\r\n///\t\th3 {\r\n///\t\t\t@include font-size(2);\r\n///\t\t}\r\n///\r\n\r\n@mixin font-size($size) {\r\n\tfont-size: $size * 1em;\r\n\tline-height: line-height($size);\r\n\tmargin-top: $line-height / $size * 1em;\r\n\tmargin-bottom: $line-height / $size * 1em;\r\n}\r\n\r\n///\r\n/// Calculate the line height that will maintain vertical rhythm for the font size\r\n///\r\n/// @parameter {number} $size - Numeric font size in unitless format\r\n///\r\n/// @example scss - Usage\r\n///\t\th3 {\r\n///\t\t\t@include line-height(2);\r\n///\t\t}\r\n///\r\n\r\n@function line-height($size) {\r\n\t$lines-needed: ceil($size / $line-height);\r\n\r\n\t@return ($line-height / $size * $lines-needed);\r\n}\r\n\r\n///\r\n/// Convert Pixels to Em units (unitless)\r\n///\r\n/// @parameter {number} $pixels - Numeric number of pixels in unitless format\r\n/// @parameter {number} $base [$base-font-size] - Numeric base font size in unitless format\r\n///\r\n/// @example scss - Usage\r\n///\t\tselect {\r\n///\t\t\tpadding-top: em(2) * 1em; // 0.125em\r\n///\t\t}\r\n///\r\n\r\n@function em($pixels, $base: $base-font-size) {\r\n\t@return $pixels / ($base * 16);\r\n}\r\n\r\n///\r\n/// Convert Em units to Pixels (unitless)\r\n///\r\n/// @parameter {number} $ems - Numeric number of ems in unitless format\r\n/// @parameter {number} $base [$base-font-size] - Numeric base font size in unitless format\r\n///\r\n/// @example scss - Usage\r\n///\t\tselect {\r\n///\t\t\tpadding-top: px(0.125) * 1px; // 2px\r\n///\t\t}\r\n///\r\n\r\n@function px($ems, $base: $base-font-size) {\r\n\t@return $ems * $base * 16;\r\n}\r\n\r\n///\r\n/// Clear any children within the element\r\n///\r\n/// @example scss - Usage\r\n///\t\tsection {\r\n///\t\t\t@include clear-children;\r\n///\t\t}\r\n///\r\n\r\n@mixin clear-children() {\r\n\t&:after {\r\n\t\tcontent: \"\";\r\n\t\tdisplay: table;\r\n\t\tclear: both;\r\n\t}\r\n}"]}