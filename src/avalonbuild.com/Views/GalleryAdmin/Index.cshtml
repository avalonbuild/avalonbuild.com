@model avalonbuild.com.Models.Gallery

@{
    ViewBag.Title = "Galleries";
	ViewBag.Description = "Galleries";
}

@section Styles {
	<link rel="stylesheet" href="~/css/pages/admin/galleries/index.css">
}

<section id="galleries">

	<div class="container">

		<header>

			<h2>@ViewBag.Title</h2>

		</header>

		<a id="add-gallery-button" data-dialog="gallery-dialog" class="button">Add Gallery</a>

		<div id="page-alert" class="alert"></div>

		<ul id="galleries-list"></ul>

	</div>

	<div id="gallery-dialog" class="dialog">

		<div class="dialog__overlay"></div>

		<div class="dialog__content">

			<a class="dialog__close" data-dialog-close></a>

			<div id="gallery-add">

				<h2 id="dialog-title"></h2>

				<form id="gallery-form" method="post" asp-antiforgery="true">

					<div id="dialog-alert" class="alert"></div>

					<div class="field">
						<label asp-for="Title"></label>
						<input asp-for="Title"/>
					</div>

					<div class="field">
						<label asp-for="Description"></label>
						<input asp-for="Description"/>
					</div>

					<ul id="images-list"></ul>

					<div class="buttons">
						<a id="dialog-submit" class="button">Add Gallery</a>
					</div>

				</form>

			</div>

		</div>
	</div>

</section>

@section Scripts {

		<script src="~/js/classie.js"></script>
		<script src="~/js/dialogFx.js"></script>

		<script>

			var dlg;

			(function() {

				var dlgtrigger = document.querySelector( '[data-dialog]' ),
					somedialog = document.getElementById( dlgtrigger.getAttribute( 'data-dialog' ) );

				dlg = new DialogFx( somedialog );

				//dlgtrigger.addEventListener( 'click', dlg.toggle.bind(dlg) );

				PopulateGalleries();
				PopulateImages();

			})();

			$("#add-gallery-button").click(ShowAddGallery);

			function PopulateGalleries()
			{
				var list = $('#galleries-list');

				$.getJSON('/api/gallery', function (data) {

					list.empty();

					$.each(data, function(i, field){

						var li = $('<li data-gallery-id="' + field.id + '">');

						li.data(field);

						var img;

						if (field.images.length > 0)
							img = $('<img src="/file/' + field.images[0].thumbnailFileName + '"/>');
						else
							img = $('<img src="/images/galleries/default.jpg"/>');

						var del = $('<a class="delete" title="Delete Gallery"></a>');

						img.click(function (evt) {
							evt.preventDefault();
							ShowEditGallery($(this).parent().data());
						});

						del.click(function (evt) {
							evt.preventDefault();
							DeleteGallery($(this).parent().data());
						});

						li.append(img);
						li.append(del);
						list.append(li);
					});

				});
			}

			function PopulateImages()
			{
				var list = $('#images-list');

				$.getJSON('@Url.Action("GetAll","Image")', function (data) {

					list.empty();

					$.each(data, function(i, field){

						var li = $('<li data-image-id="' + field.id + '">');
						var img = $('<img src="/file/' + field.thumbnailFileName + '"/>');

						li.click(function (evt) {

							if ($(this).attr("data-selected") == "true")
								$(this).removeAttr("data-selected");
							else
								$(this).attr("data-selected", "true");

						});

						li.append(img);
						list.append(li);

					});

				});
			}

			function ShowAddGallery()
			{
				$("#dialog-title").html("Add a Gallery");

				var form = $("#gallery-form");

				form.find('input[name="Title"]').val("");
				form.find('input[name="Description"]').val("");

				ClearSelectedImages();

				var submit = $("#dialog-submit");

				submit.html("Add Gallery");
				submit.unbind().click(CreateGallery);

				ToggleDialog();
			}

			function ShowEditGallery(gallery)
			{
				$("#dialog-title").html("Update a Gallery");

				var form = $("#gallery-form");
				form.data(gallery);

				form.find('input[name="Title"]').val(gallery.title);
				form.find('input[name="Description"]').val(gallery.description);

				ClearSelectedImages();
				SetSelectedImages(gallery);

				var submit = $("#dialog-submit");

				submit.html("Update Gallery");
				submit.unbind().click(UpdateGallery);

				ToggleDialog();
			}

			function CreateGallery()
			{
				var form = $("#gallery-form");
				var token = form.find("input[name=__RequestVerificationToken]").val();

				var datajson = {
					name: form.find('input[name="Title"]').val().replace(/ /g, '-').toLowerCase(),
					title: form.find('input[name="Title"]').val(),
					description: form.find('input[name="Description"]').val()
				}

				datajson.images = GetSelectedImages();

				if (datajson.images.length == 0)
				{
					SetDialogAlert("You must select at least one gallery image.", "error");
					return;
				}

				$.ajax({
					type: 'POST',
					url: '/api/gallery',
					headers: {
						"RequestVerificationToken": token
					},
					contentType: "application/json; charset=utf-8",
					dataType: "json",
					data: JSON.stringify(datajson),
					statusCode: {
						200: function(response, textStatus, jqXHR) {
							SetPageAlert(response, "success");
							ToggleDialog();
							PopulateGalleries();
						},
						400: function(jqXHR, textStatus, errorThrown) {
							SetDialogAlert(jqXHR.responseText, "error");
						}
					},
					error: function (jqXHR, textStatus, errorThrown) {
						SetDialogAlert("Error adding gallery.", "error");
					}
				});
			}

			function UpdateGallery()
			{
				var form = $("#gallery-form");
				var token = form.find("input[name=__RequestVerificationToken]").val();

				var datajson = {
					name: form.find('input[name="Title"]').val().replace(/ /g, '-').toLowerCase(),
					title: form.find('input[name="Title"]').val(),
					description: form.find('input[name="Description"]').val()
				}

				datajson.images = GetSelectedImages();

				if (datajson.images.length == 0)
				{
					SetDialogAlert("You must select at least one gallery image.", "error");
					return;
				}

				$.ajax({
					type: 'PUT',
					url: '/api/gallery/' + form.data().id,
					headers: {
						"RequestVerificationToken": token
					},
					contentType: "application/json; charset=utf-8",
					dataType: "json",
					data: JSON.stringify(datajson),
					statusCode: {
						200: function(response, textStatus, jqXHR) {
							SetPageAlert(response, "success");
							ToggleDialog();
							PopulateGalleries();
						},
						400: function(jqXHR, textStatus, errorThrown) {
							SetDialogAlert(jqXHR.responseText, "error");
						}
					},
					error: function (jqXHR, textStatus, errorThrown) {
						SetDialogAlert("Error updating gallery.", "error");
					}
				});
			}

			function DeleteGallery(gallery)
			{
				$.ajax({
					type: 'DELETE',
					url: '/api/gallery/' + gallery.id,
					success: function(data, textStatus, jqXHR) {
						PopulateGalleries();
					}
				});
			}

			function GetSelectedImages()
			{
				var images = [];

				$.each($("#images-list li[data-selected=true]"), function (key, value) {

					var id = $(this).attr("data-image-id");
					images.push({Id: id});

				});

				return images;

			}

			function SetSelectedImages(gallery)
			{
				$.each($("#images-list li"), function (key, value) {

					var id = $(this).attr("data-image-id");

					var selected = false;

					for (i = 0; i < gallery.images.length; i++)
					{
						if (id == gallery.images[i].id)
							selected = true;
					}

					if (selected)
						$(this).attr("data-selected", "true");

				});
			}

			function ClearSelectedImages()
			{
				$.each($("#images-list li[data-selected=true]"), function (key, value) {

					$(this).removeAttr("data-selected");

				});
			}

			function ToggleDialog()
			{
				dlg.toggle();
			}

			function SetPageAlert(message, type)
			{
				var alert = $("#page-alert");

				alert.removeClass("success");
				alert.removeClass("error");

				alert.addClass("show");
				alert.addClass(type);

				alert.html(message);

				setTimeout(HidePageAlert, 5000);
			}

			function HidePageAlert(message)
			{
				var alert = $("#page-alert");
				alert.removeClass("show");
			}

			function SetDialogAlert(message, type)
			{
				var alert = $("#dialog-alert");

				alert.removeClass("success");
				alert.removeClass("error");

				alert.addClass("show");
				alert.addClass(type);

				alert.html(message);

				setTimeout(HideDialogAlert, 5000);
			}

			function HideDialogAlert(message)
			{
				var alert = $("#dialog-alert");
				alert.removeClass("show");
			}

		</script>

}
