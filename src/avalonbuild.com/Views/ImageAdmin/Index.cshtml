@model avalonbuild.com.Models.Image

@{
    ViewBag.Title = "Images";
	ViewBag.Description = "Images";
}

@section Styles {
	<link rel="stylesheet" href="~/css/pages/admin/images/index.css">
}

<section id="images">

	<div class="container">

		<header>

			<h2>@ViewBag.Title</h2>

		</header>

		<a id="add-image-button" data-dialog="image-dialog" class="button trigger">Add Image</a>

		<div id="page-alert" class="alert"></div>

		<ul id="images-list"></ul>

	</div>

	<div id="image-dialog" class="dialog">

		<div class="dialog__overlay"></div>

		<div class="dialog__content">

			<a class="dialog__close" data-dialog-close></a>

			<div id="image-add">

				<h2>Add an Image</h2>

				<form id="image-form" method="post" asp-antiforgery="true" enctype="multipart/form-data">

					<div id="dialog-alert" class="alert"></div>

					<div class="field">
						<label asp-for="Name"></label>
						<input asp-for="Name"/>
					</div>

					<div class="field">
						<label for="file">Image File</label>
						<input type="file" id="file" name="file" />
					</div>

					<div class="buttons">
						<div class="button-progress-wrap">
							<button id="dialog-submit" class="button">Add Image</button>
							<div id="progress">
								<span id="progress-bar"></span>
							</div>
						</div>
					</div>

				</form>

			</div>

		</div>

	</div>

</section>

@section Scripts {

		<script src="~/js/classie.js"></script>
		<script src="~/js/dialogFx.js"></script>

		<script>

			var dlg;

			(function() {

				var dlgtrigger = document.querySelector( '[data-dialog]' ),
					somedialog = document.getElementById( dlgtrigger.getAttribute( 'data-dialog' ) );

				dlg = new DialogFx( somedialog );

				//dlgtrigger.addEventListener( 'click', dlg.toggle.bind(dlg) );

				PopulateImages();

			})();

			$("#add-image-button").click(ShowAddImage);

			function CreateImage(e)
			{
				e.preventDefault();

				$("#dialog-submit").prop("disabled",true);

				//add the file(s)
				var fileUpload = $("#file").get(0);
				var files = fileUpload.files;
				var data = new FormData();

				for (var i = 0; i < files.length ; i++) {
					data.append(files[i].name, files[i]);
				}

				//add the data
				var postData = $('#image-form :input');
				$.each(postData, function (key, input) {
					data.append(input.name, input.value);
				});

				$("#progress").show();

				$.ajax({
					xhr: function(){
						var xhr = new window.XMLHttpRequest();

						//Upload progress
						xhr.upload.addEventListener("loadstart", UploadStart, false);
						xhr.upload.addEventListener("progress", UploadProgress, false);
						xhr.upload.addEventListener("load", UploadComplete, false);

						return xhr;
					},
					type: "POST",
					url: '@Url.Action("Create","Image")',
					contentType: false,
					processData: false,
					data: data,
					statusCode: {
						// Successfully Created
						201: function(response, textStatus, jqXHR) {
							SetPageAlert("Image added successfully", "success");
							CloseDialog();
							PopulateImage(response, $('#images-list'), true);
						},
						// Bad Request - Missing file
						400: function(jqXHR, textStatus, errorThrown) {
							SetDialogAlert(jqXHR.responseText, "error");
						},
						// Conflict - Duplicate filename
						409: function(jqXHR, textStatus, errorThrown) {
							SetDialogAlert(jqXHR.responseText, "error");
						}
					},
					error: function (jqXHR, textStatus, errorThrown) {
						SetDialogAlert("Error uploading image.", "error");
					},

				}).always(function () {
						$("#dialog-submit").prop("disabled",false);
						$("#progress").hide();
				});
			}

			function UploadStart(event)
			{
				console.log("Upload started");

			}

			function UploadComplete(event)
			{
				console.log("Upload complete");
			}

			function UploadProgress(event)
			{
				if (event.lengthComputable) {

					var percentComplete = event.loaded / event.total;

					$("#progress-bar").width(percentComplete * 100 + '%');

					console.log("Percent uploaded: " + percentComplete * 100 + "% - " + event.loaded + " / " + event.total);
				}
			}

			function PopulateImages()
			{
				var list = $('#images-list');

				$.getJSON('@Url.Action("GetAll","Image")', function (data) {

					list.empty();
					$.each(data, function(i, field){
						PopulateImage(field, list);
					});

				});
			}

			function PopulateImage(image, list, prepend)
			{
				var li = $('<li>');
				var img = $('<img src="/file/' + image.thumbnailFileName + '"/>');
				var del = $('<a class="delete" title="Delete Image" href="/api/image/' + image.id + '"></a>');

				del.click(function (evt) {
					evt.preventDefault();
					DeleteImage($(this));
				});

				li.append(img);
				li.append(del);

				if (prepend == true)
					list.prepend(li);
				else
					list.append(li);
			}

			function ShowAddImage()
			{
				$("#dialog-title").html("Add an Image");

				var form = $("#image-form");

				form.find('input[name="Name"]').val("");
				form.find('input[name="file"]').val("");

				var submit = $("#dialog-submit");

				submit.html("Add Image");
				submit.unbind().click(CreateImage);

				OpenDialog();
			}

			function DeleteImage(image)
			{
				var url = image.attr("href");

				var x = image.parent().get(0);

				x.className += " deleting";

				$.ajax({
					type: 'DELETE',
					url: url,
					success: function(data, textStatus, jqXHR) {
						//remove list item when the item is successfully deleted from the server
						x.style.animationName = "delete-animation";
						x.addEventListener("animationend", RemoveImage);
					}
				});
			}

			function RemoveImage()
			{
				$(this).remove();
			}

			function OpenDialog()
			{
				dlg.open();
			}

			function CloseDialog()
			{
				dlg.close();
			}

			function SetPageAlert(message, type)
			{
				var alert = $("#page-alert");

				alert.removeClass("success");
				alert.removeClass("error");

				alert.addClass("show");
				alert.addClass(type);

				alert.html(message);

				setTimeout(HidePageAlert, 5000);
			}

			function HidePageAlert(message)
			{
				var alert = $("#page-alert");
				alert.removeClass("show");
			}

			function SetDialogAlert(message, type)
			{
				var alert = $("#dialog-alert");

				alert.removeClass("success");
				alert.removeClass("error");

				alert.addClass("show");
				alert.addClass(type);

				alert.html(message);

				setTimeout(HideDialogAlert, 5000);
			}

			function HideDialogAlert(message)
			{
				var alert = $("#dialog-alert");
				alert.removeClass("show");
			}

		</script>

}
